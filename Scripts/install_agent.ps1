<#
.SYNOPSIS
    N-Able - Script d'installation de l'agent (Windows)
.DESCRIPTION
    N-Able - Script d'installation de l'agent (Windows)
.NOTES
    Fichier    : install_Agent.ps1
    Author     : Jerome Couette - jerome.couette@cpu.ca
    Date       : March 9 2021
    Version    : 1.0
#>
#---------------------------------------------------------[Initialization]---------------------------------------------------------
#Ensure powershell is opened in Admin mode
If (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
	If ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
		$CommandLine = "-File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
		Start-Process -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine
		Exit
	}
}

#https://blog.darrenjrobinson.com/powershell-the-underlying-connection-was-closed-an-unexpected-error-occurred-on-a-send/
#[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
Set-ItemProperty -Path 'HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NetFramework\v4.0.30319' -Name 'SchUseStrongCrypto' -Value '1' -Type DWord
#Load assembly for WPF (UI)
[void][System.Reflection.Assembly]::LoadWithPartialName('presentationframework')
#-----------------------------------------------------------[Functions]------------------------------------------------------------
<#
    .SYNOPSIS
    Install N-ABle probe (Windows)

    .DESCRIPTION
    Install N-ABle probe (Windows)

    .PARAMETER AGENTACTIVATIONKEY
    The key generated by SolarWinds N-central that is required in order to install generic system agent software.

    .PARAMETER SERVERPROTOCOL
    Identifies the protocol that the probe will use to communicate with the central server as one of HTTP or HTTPS.

    .PARAMETER SERVERADDRESS
    The IP address or FQDN of the central server.

    .PARAMETER SERVERPORT
    The numeric port number that the probe will use to communicate with the central server. For example, 80 for HTTP or 443 for HTTPS.

    .PARAMETER PROBETYPE
    Identifies the type of probe to be installed as one of:

    - Local_Windows
    - Network_Windows (For this probe type, include the AGENTDOMAIN, AGENTUSERNAME, and AGENTPASSWORD parameters.)
    - Workgroup_Windows (For this probe type, include only the AGENTUSERNAME and AGENTPASSWORD parameters.)

    .PARAMETER AGENTDOMAIN	
    The domain of the user account that will access the probe. This parameter is only used for Windows probes and not for Windows agents.

    .PARAMETER AGENTUSERNAME	
    The user name of the user account that will access the probe.This parameter is only used for Windows probes and not for Windows agents.

    .PARAMETER AGENTPASSWORD	
    The password of the user account that will access the probe. This parameter is only used for Windows probes and not for Windows agents.

    .EXAMPLE
    PS> Install-NAbleWindowsProbe "02ac69e6-af38-32db-e923-7b64ebcc8d4e" "156"

    .NOTES
    Author: Jerome Couette (jerome.couette@cpu.ca)
    Version: 1.0.0
    Date: 2021-03-09
#>
function Install-NAbleWindowsProbe {
    [CmdletBinding()]
    param (
        [Parameter(Mandatory=$true,Position=0)]
        [string]$CUSTOMERNAME,
        [Parameter(Mandatory=$false,Position=1)]
        [string]$SERVERPROTOCOL = "HTTPS",
        [Parameter(Mandatory=$false,Position=2)]
        [string]$SERVERADDRESS = "ncod440.n-able.com",
        [Parameter(Mandatory=$false,Position=3)]
        [string]$SERVERPORT = "443",
        [Parameter(Mandatory=$true,Position=4)]
        [string]$CUSTOMERID,
        [Parameter(Mandatory=$true,Position=5)]
        [pscredential]$ProbeCreds
    )
    Begin{
        $Global:ProbeInstallerURL = "https://chocolatey.cpu.qc.ca/endpoints/CPU/content/DEVOPS/NAble/WindowsProbeSetup.exe"
        $Global:ProbeInstallerPath = "$env:systemdrive\Temp\WindowsProbeSetup.exe"
        $Global:ProbeInstallerLog = "$env:systemdrive\Temp\probe_install.log"
    }
    Process{
        if (!(Test-Path "$env:systemdrive\Temp")) {mkdir "$env:systemdrive\Temp"}
        if (!(Test-Path "$env:systemdrive\Temp\WindowsAgentSetup.exe")) {
            Write-Host "Downloading probe installer..."
            Invoke-WebRequest -Uri $ProbeInstallerURL -Headers @{"AUTHORIZATION"="Basic " + [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("DefaultFeedUser:RC8QCsIKUe"))} -OutFile "$ProbeInstallerPath"
        }else {
            Write-Host "Agent installer file is already downloaded!"
        }
        if (Test-Path $ProbeInstallerPath) {
            Write-Host "Installing N-Able probe.."
            switch ($PROBETYPE) {
                "Network_Windows" {
                    $AGENTDOMAIN = $PSBoundParameters[$pAGENTDOMAIN]
                    &$ProbeInstallerPath /s /v" /qn AGENTACTIVATIONKEY=$AGENTACTIVATIONKEY PROBETYPE=$PROBETYPE AGENTDOMAIN=$AGENTDOMAIN AGENTUSERNAME=$AGENTUSERNAME AGENTPASSWORD=$AGENTPASSWORD /L*v $ProbeInstallerLog "
                }
                "Local_Windows" {
                    &$ProbeInstallerPath /s /v" /qn AGENTACTIVATIONKEY=$AGENTACTIVATIONKEY PROBETYPE=$PROBETYPE /L*v $ProbeInstallerLog "
                }
                "Workgroup_Windows" {
                    &$ProbeInstallerPath /s /v" /qn AGENTACTIVATIONKEY=$AGENTACTIVATIONKEY PROBETYPE=$PROBETYPE AGENTUSERNAME=$AGENTUSERNAME AGENTPASSWORD=$AGENTPASSWORD /L*v $ProbeInstallerLog "
                }
            }
        }
    }
    End{

    }
}
<#
    .SYNOPSIS
    Install N-ABle agent (Windows)

    .DESCRIPTION
    Install N-ABle agent (Windows)

    .PARAMETER REGISTRATION_TOKEN
    The registration token

    .PARAMETER CUSTOMERID
    The customer specific ID 

    .PARAMETER SERVERPROTOCOL
    The communication protocol that the agent will use (HTTP or HTTPS)

    .PARAMETER SERVERADDRESS
    N-Able Central server address

    .PARAMETER SERVERPORT
    Communication port (80 or 443)

    .EXAMPLE
    PS> Install-NAbleWindowsAgent 02ac69e6-af38-32db-e923-7b64ebcc8d4e 156

    .NOTES
    Author: Jerome Couette (jerome.couette@cpu.ca)
    Version: 1.0.0
    Date: 2021-03-09
#>

function Install-NAbleWindowsAgent {
    [CmdletBinding()]
    param (
        [Parameter(Mandatory=$true,Position=0)]
        [string]$REGISTRATION_TOKEN,
        [Parameter(Mandatory=$true,Position=1)]
        [int]$CUSTOMERID,
        [Parameter(Mandatory=$false,Position=2)]
        [string]$SERVERPROTOCOL = "HTTPS",
        [Parameter(Mandatory=$false,Position=3)]
        [string]$SERVERADDRESS = "ncod440.n-able.com",
        [Parameter(Mandatory=$false,Position=4)]
        [string]$SERVERPORT = "443"
    )
    $AgentInstallerURL= "http://chocolatey.cpu.qc.ca/endpoints/CPU/content/DEVOPS/NAble/WindowsAgentSetup.exe"
    $AgentInstallerPath = "$env:systemdrive\Temp\WindowsAgentSetup.exe"
    $AgentInstallerLog = "$env:systemdrive\Temp\AgentInstaller.log"
    if (!(Test-Path "$env:systemdrive\Temp")) {mkdir "$env:systemdrive\Temp"}
    if (!(Test-Path "$env:systemdrive\Temp\WindowsAgentSetup.exe")) {
        Write-Host "Downloading agent installer..."
        Invoke-WebRequest -Uri $AgentInstallerURL -Headers @{"AUTHORIZATION"="Basic " + [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("DefaultFeedUser:RC8QCsIKUe"))} -OutFile "$AgentInstallerPath"
    }else {
        Write-Host "Agent installer file is already downloaded!"
    }
    if (Test-Path $AgentInstallerPath) {
        Write-Host "Installing N-Able agent, please wait.."
        #&$AgentInstallerPath /s /v" /qn CUSTOMERID=$CUSTOMERID CUSTOMERSPECIFIC=1 REGISTRATION_TOKEN=$REGISTRATION_TOKEN SERVERPROTOCOL=$SERVERPROTOCOL SERVERADDRESS=$SERVERADDRESS SERVERPORT=$SERVERPORT "
        Start-Process -FilePath $AgentInstallerPath -ArgumentList "/s /v"" /qn CUSTOMERID=$CUSTOMERID CUSTOMERSPECIFIC=1 REGISTRATION_TOKEN=$REGISTRATION_TOKEN SERVERPROTOCOL=$SERVERPROTOCOL SERVERADDRESS=$SERVERADDRESS SERVERPORT=$SERVERPORT /L*v $AgentInstallerLog""" -Verb RunAs -Wait
    }
}
function Install-PSNcentralModule (){
    $PsModulePath1 = "$env:SystemDrive\Program Files\WindowsPowerShell\Modules"
    #[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    
    Install-PackageProvider -Name "NuGet" -MinimumVersion 2.8.5.208 -Force
    Set-PSRepository -Name 'PSGallery' -SourceLocation "https://www.powershellgallery.com/api/v2" -InstallationPolicy Trusted
    Install-Module -Name 7Zip4PowerShell -Force
    if (!(Test-Path "$env:systemdrive\Temp")) {mkdir "$env:systemdrive\Temp"}
    Invoke-WebRequest -Uri "https://chocolatey.cpu.qc.ca/endpoints/CPU/content/DEVOPS/NAble/PS-NCentral.zip" -Headers @{"AUTHORIZATION"="Basic " + [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("DefaultFeedUser:RC8QCsIKUe"))} -OutFile "$env:systemdrive\Temp\PS-NCentral.zip"
    $sourcefile = "$env:systemdrive\Temp\PS-NCentral.zip"
    Expand-7Zip -ArchiveFileName $sourcefile -TargetPath $PsModulePath1
}
function Send-DataToLogDNA {
    [CmdletBinding()]
    param (
        # Log message to send to LogDNA
        [Parameter(Position=0,Mandatory=$true)]
        [String]$Message,
        # Log Severity
        [Parameter(Position=1,Mandatory=$true)]
        [ValidateSet("INFO", "DEBUG", "WARN", "ERROR")]
        [String]$Severity,
        # Application that send the log message
        [Parameter(Position=2,Mandatory=$true)]
        [String]$Application,
        # Organisation Ingestion Key
        [Parameter(Position=3,Mandatory=$true)]
        [String]$ApiKey
    )
    $time = [int64](get-date -uformat %s)
    $Uri = "https://logs.logdna.com/logs/ingest?hostname=$env:COMPUTERNAME&now=$time&apikey=$ApiKey"
    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Content-Type","application/json; charset=UTF-8")
    $body = @"
    {
        "lines":[
          {
              "line": "$Message",
              "app": "$application",
              "level": "$Severity"
          }
        ]
      }
"@ 

$result = Invoke-RestMethod -Uri $uri -Method Post -Body $body -Headers $headers
return $result

}
function ConvUTF8 (){
    Begin{
        $encFrom = [System.Text.Encoding]::GetEncoding("UTF-8")
        $encTo = [System.Text.Encoding]::GetEncoding([System.Text.Encoding]::Default.Codepage)
    }
    Process{
        $bytes = $encTo.GetBytes($_)
        $bytes = [System.Text.Encoding]::Convert($encFrom, $encTo, $bytes)
        $encTo.GetString($bytes)
    }
}
function DecodeBase64Image {
    param (
        [Parameter(Mandatory=$true)]
        [String]$ImageBase64
    )
    # Parameter help description
    $ObjBitmapImage = New-Object System.Windows.Media.Imaging.BitmapImage #Provides a specialized BitmapSource that is optimized for loading images using Extensible Application Markup Language (XAML).
    $ObjBitmapImage.BeginInit() #Signals the start of the BitmapImage initialization.
    $ObjBitmapImage.StreamSource = [System.IO.MemoryStream][System.Convert]::FromBase64String($ImageBase64) #Creates a stream whose backing store is memory.
    $ObjBitmapImage.EndInit() #Signals the end of the BitmapImage initialization.
    $ObjBitmapImage.Freeze() #Makes the current object unmodifiable and sets its IsFrozen property to true.
    $ObjBitmapImage
}


#----------------------------------------------------------[Declarations]----------------------------------------------------------
#N-Able API Auth
$Global:NCentral_FQDN        = "ncod440.n-able.com"
$Global:NAble_SecureString   = ConvertTo-SecureString "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJTb2xhcndpbmRzIE1TUCBOLWNlbnRyYWwiLCJ1c2VyaWQiOjY1Njk3NjQ5NiwiaWF0IjoxNjE0NjI3MzkwfQ.8yntfz1Rh5o245ylT9B-vJZZJ-1GWtRiDIB_qnacq3I" -AsPlainText -Force
$Global:NAble_Credentials    = New-Object PSCredential ("_JWT", $Global:NAble_SecureString)
# UI Definition
[xml]$xaml = @'
<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="N-Able Toolbox" Height="326" Width="469" WindowStartupLocation="CenterScreen" ResizeMode="NoResize">
    <Grid>
        <StatusBar Name="SB_Status" HorizontalAlignment="Left" Height="26" Margin="0,266,0,0" VerticalAlignment="Top" Width="459"/>
        <TabControl HorizontalAlignment="Left" Height="230" Margin="0,36,0,0" VerticalAlignment="Top" Width="459">
            <TabItem Header="Installation de l'agent">
                <Grid Background="#FFE5E5E5">
                    <GroupBox Header="Identification du client" HorizontalAlignment="Left" Height="55" Margin="6,0,0,0" VerticalAlignment="Top" Width="440" BorderBrush="#FF838080" Foreground="#FF838080">
                        <StackPanel HorizontalAlignment="Left" Height="29" VerticalAlignment="Top" Width="423" Orientation="Horizontal">
                            <StackPanel HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="46" Margin="0,1,0,0">
                                <Label Content="Client:" Foreground="#FF0967C5" Margin="0,1,0,0"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="39" Margin="0,0,0,-10" VerticalAlignment="Top" Width="348">
                                <ComboBox Name="CB_Client_Agent" Height="23" HorizontalAlignment="Left" Margin="0,5,0,0" VerticalAlignment="Top" Width="341"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="29" VerticalAlignment="Top" Width="27">
                                <Button Name="BT_Client_Help_Agent" HorizontalAlignment="Left" Height="23" Margin="0,5,0,0" VerticalAlignment="Top" Width="25">
                                    <Image Name="IMG_Client_Help_Agent" Height="23" Width="19" Source="help-icon.png"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Name="GroupBox_Network_Agent" Header="Protocole réseau" HorizontalAlignment="Left" Height="58" Margin="310,60,0,0" VerticalAlignment="Top" Width="136" BorderBrush="#FF838080" Foreground="#FF838080">
                        <StackPanel HorizontalAlignment="Left" Height="39" Margin="0,0,-2,-4" VerticalAlignment="Top" Width="126" Orientation="Horizontal">
                            <StackPanel HorizontalAlignment="Left" Height="39" Margin="0,0,5,0" VerticalAlignment="Top" Width="86">
                                <RadioButton Name="ChkBox_Protocol_HTTPS_Agent" Content="HTTPS (443)" HorizontalAlignment="Left" Margin="0,1,0,2" VerticalAlignment="Top" IsChecked="True"/>
                                <RadioButton Name="ChkBox_Protocol_HTTP_Agent" Content="HTTP (80)" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="29" Margin="0,0,-2,0" VerticalAlignment="Top" Width="28">
                                <Button Name="BT_Protocol_Help_Agent" HorizontalAlignment="Left" Height="23" Margin="0,5,0,0" VerticalAlignment="Top" Width="25">
                                    <Image Name="IMG_Protocol_Help_Agent" Height="23" Width="19" Source="help-icon.png"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <Button Name="BT_Deploy_Agent" HorizontalAlignment="Left" Height="74" Margin="310,123,0,0" VerticalAlignment="Top" Width="136">
                        <Image Name="IMG_Deploy_Agent" Height="74" Width="127" Source="start-button.png"/>
                    </Button>
                </Grid>
            </TabItem>
            <TabItem Header="Installation de la probe">
                <Grid Background="#FFE5E5E5">
                    <Button Name="BT_Deploy_Probe" HorizontalAlignment="Left" Height="74" Margin="310,123,0,0" VerticalAlignment="Top" Width="136">
                        <Image Name="IMG_Deploy_Probe" Height="74" Width="127" Source="start-button.png"/>
                    </Button>
                    <GroupBox Header="Informations de connexion" HorizontalAlignment="Left" Height="137" Margin="6,60,0,0" VerticalAlignment="Top" Width="299" BorderBrush="#FF838080" Foreground="#FF838080">
                        <StackPanel HorizontalAlignment="Left" Height="99" Margin="0,10,0,0" VerticalAlignment="Top" Width="292" Orientation="Horizontal">
                            <StackPanel HorizontalAlignment="Left" Height="88" Margin="0,0,0,-26" VerticalAlignment="Top" Width="86">
                                <Label Content="Utilisateur:" Foreground="#FF0967C5" Margin="0,-5,0,10"/>
                                <Label Content="Mot de passe:" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FF0967C5" Margin="0,0,0,6" Padding="5,5,5,8"/>
                                <Label Content="Domaine:" Foreground="#FF0967C5" Margin="0,0,0,5"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="99" Margin="0,0,12,0" VerticalAlignment="Top" Width="201">
                                <StackPanel HorizontalAlignment="Left" Height="33" Margin="0,0,-38,0" VerticalAlignment="Top" Width="203" Orientation="Horizontal">
                                    <TextBox Name="TB_Probe_Username" HorizontalAlignment="Left" Height="23" Margin="0,0,5,10" TextWrapping="Wrap" VerticalAlignment="Top" Width="165"/>
                                    <Button Name="BT_Username_Help_Probe" HorizontalAlignment="Left" Height="23" Margin="0,0,0,0" VerticalAlignment="Top" Width="25">
                                        <Image Name="IMG_Username_Help_Probe" Height="23" Width="19" Source="help-icon.png"/>
                                    </Button>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Left" Height="26" Margin="0,0,-38,10" VerticalAlignment="Top" Width="203" Orientation="Horizontal">
                                    <PasswordBox Name="PB_Probe_Password" Margin="0,2,5,0" Height="23" Width="165" />
                                    <Button Name="BT_Password_Help_Probe" HorizontalAlignment="Left" Height="23" Margin="0,2,0,0" VerticalAlignment="Top" Width="25">
                                        <Image Name="IMG_Password_Help_Probe" Height="23" Width="19" Source="help-icon.png"/>
                                    </Button>
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Left" Height="32" Margin="0,0,0,0" VerticalAlignment="Top" Width="203" Orientation="Horizontal">
                                    <TextBox Name="TB_Domain_Probe" HorizontalAlignment="Left" Height="23" Margin="0,0,5,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Padding="0,0,5,0"/>
                                    <Button Name="BT_Domain_Help_Probe" HorizontalAlignment="Left" Height="23" Margin="0,0,0,0" VerticalAlignment="Top" Width="25">
                                        <Image Name="IMG_Domain_Help_Probe" Height="23" Width="19" Source="help-icon.png"/>
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Name="GroupBox_Network_Probe" Header="Protocole réseau" HorizontalAlignment="Left" Height="58" Margin="310,60,0,0" VerticalAlignment="Top" Width="136" BorderBrush="#FF838080" Foreground="#FF838080">
                        <StackPanel HorizontalAlignment="Left" Height="39" Margin="0,0,-2,-4" VerticalAlignment="Top" Width="126" Orientation="Horizontal">
                            <StackPanel HorizontalAlignment="Left" Height="39" Margin="0,0,5,0" VerticalAlignment="Top" Width="86">
                                <RadioButton Name="ChkBox_Protocol_HTTPS_Probe" Content="HTTPS (443)" HorizontalAlignment="Left" Margin="0,1,0,2" VerticalAlignment="Top" IsChecked="True"/>
                                <RadioButton Name="ChkBox_Protocol_HTTP_Probe" Content="HTTP (80)" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="29" Margin="0,0,-2,0" VerticalAlignment="Top" Width="28">
                                <Button Name="BT_Protocol_Help_Probe" HorizontalAlignment="Left" Height="23" Margin="0,5,0,0" VerticalAlignment="Top" Width="25">
                                    <Image Name="IMG_Protocol_Help_Probe" Height="23" Width="19" Source="help-icon.png"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Identification du client" HorizontalAlignment="Left" Height="55" Margin="6,0,0,0" VerticalAlignment="Top" Width="440" BorderBrush="#FF838080" Foreground="#FF838080">
                        <StackPanel HorizontalAlignment="Left" Height="29" VerticalAlignment="Top" Width="423" Orientation="Horizontal">
                            <StackPanel HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="46" Margin="0,1,0,0">
                                <Label Content="Client:" Foreground="#FF0967C5" Margin="0,1,0,0"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="39" Margin="0,0,0,-10" VerticalAlignment="Top" Width="348">
                                <ComboBox Name="CB_Client_Probe" Height="23" HorizontalAlignment="Left" Margin="0,5,0,0" VerticalAlignment="Top" Width="341"/>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Left" Height="28" VerticalAlignment="Top" Width="26" Margin="0,1,0,0">
                                <Button Name="BT_Help_Client_Probe" HorizontalAlignment="Left" Height="23" Margin="0,5,0,0" VerticalAlignment="Top" Width="25">
                                    <Image Name="IMG_Client_Help_Probe" Height="23" Width="19" Source="help-icon.png"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                </Grid>
            </TabItem>
        </TabControl>
        <Menu HorizontalAlignment="Left" Height="36" VerticalAlignment="Top" Width="368" Margin="100,0,0,0" Background="White" >
            <MenuItem Name="Menu_Item_File" Header="Fichier" Height="36" Width="52" Padding="6,0">
                <StackPanel HorizontalAlignment="Left" Height="23" VerticalAlignment="Top" Width="105" Margin="-35,0,-50,0">
                    <Button Name="BT_Close" Content="Quitter" HorizontalAlignment="Left" Height="23" Margin="0,0,0,0" VerticalAlignment="Top" Width="104"/>
                </StackPanel>
            </MenuItem>
            <MenuItem Name="Menu_Item_Settings" Header="Paramètres" Height="36" Width="73">
                <StackPanel HorizontalAlignment="Left" Height="52" VerticalAlignment="Top" Width="105" Margin="-35,0,-50,0">
                    <Button Name="BT_Language" Content="Language" HorizontalAlignment="Left" Height="23" Margin="0,0,0,3" VerticalAlignment="Top" Width="104"/>
                    <Button Name="BT_Logs" Content="Journaux" HorizontalAlignment="Left" Height="23" Margin="0,0,0,0" VerticalAlignment="Top" Width="104"/>
                </StackPanel>
            </MenuItem>
            <MenuItem Name="Menu_Item_Help" Header="Aide" Height="36" Width="41">
            </MenuItem>
        </Menu>
        <Image Name="IMG_Logo_CPU" HorizontalAlignment="Left" Height="36" VerticalAlignment="Top" Width="100" Source="logo-cpu.PNG" Margin="2,0,0,0" IsHitTestVisible="False"/>
    </Grid>
</Window>
'@
# Embedded images
$Logo_Base64      = "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"
$Help_Img_Base64  = "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"
$Start_Img_Base64 = "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"
#-----------------------------------------------------------[Execution]------------------------------------------------------------
try {
    #Install PS-NCentral Module
    Install-PSNcentralModule

    #Import PS-NCentral Module
    Import-Module PS-NCentral
}
catch {
    $Message = ($error[0].Exception.Message)
    Send-DataToLogDNA -Message "$Message" -Severity ERROR -Application "install_agent.ps1" -ApiKey "1ec3f3f8a4b8617ec6c8904c9c928a6b"
}
$reader=(New-Object System.Xml.XmlNodeReader $xaml)
try{$Form=[Windows.Markup.XamlReader]::Load( $reader )}
catch{Write-Host "Unable to load Windows.Markup.XamlReader. Some possible causes for this problem include: .NET Framework is missing PowerShell must be launched with PowerShell -sta, invalid XAML code was encountered."; exit}
$xaml.SelectNodes("//*[@Name]") | %{Set-Variable -Name ($_.Name) -Value $Form.FindName($_.Name)}

# Fix GUI accents
$Menu_Item_Settings.Header      = "Paramètres" | ConvUTF8
$GroupBox_Network_Agent.Header  = "Protocole réseau" | ConvUTF8
$GroupBox_Network_Probe.Header  = "Protocole réseau" | ConvUTF8
$MSG_Domain_Help_Probe          = 'Entrez le nom du domaine, Ex: CMBEAUPORT' | ConvUTF8
$MSG_Protocol_Help_Probe        = 'Sélectionnez le protocole de communication, il est préférable de le laisser a HTTPS mais dans certains cas où ça ne fonctionnerait pas utilisez HTTP' | ConvUTF8
$MSG_Help_Client_Probe          = 'Sélectionnez le client pour lequel vous installer la probe' | ConvUTF8
$MSG_Language                   = 'À venir !' | ConvUTF8
$MSG_Logs                       = 'À venir !' | ConvUTF8
$MSG_Protocol_Help_Agent        = 'Sélectionnez le protocole de communication, il est préférable de le laisser a HTTPS mais dans certains cas où ça ne fonctionnerait pas utilisez HTTP' | ConvUTF8
$MSG_Username_Help_Probe        = 'Entrez le nom de l''utilisateur, Ex: Administrateur' | ConvUTF8
$MSG_Password_Help_Probe        = 'Entrez le mot de passe de l''utilisateur' | ConvUTF8
$MSG_Client_Help_Agent          = 'Sélectionnez le client pour lequel vous installer l''agent' | ConvUTF8

# Fix Image Sources
$IMG_Client_Help_Agent.Source   = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Protocol_Help_Agent.Source = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Username_Help_Probe.Source = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Password_Help_Probe.Source = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Domain_Help_Probe.Source   = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Protocol_Help_Probe.Source = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Client_Help_Probe.Source   = DecodeBase64Image -ImageBase64 $Help_Img_Base64
$IMG_Logo_CPU.Source            = DecodeBase64Image -ImageBase64 $Logo_Base64
$IMG_Deploy_Agent.Source        = DecodeBase64Image -ImageBase64 $Start_Img_Base64
$IMG_Deploy_Probe.Source        = DecodeBase64Image -ImageBase64 $Start_Img_Base64

# Fix buttons border and backgrounds
$BT_Domain_Help_Probe.BorderBrush   = $null
$BT_Protocol_Help_Probe.BorderBrush = $null
$BT_Help_Client_Probe.BorderBrush   = $null
$BT_Close.BorderBrush               = $null
$BT_Language.BorderBrush            = $null
$BT_Logs.BorderBrush                = $null
$BT_Protocol_Help_Agent.BorderBrush = $null
$BT_Deploy_Agent.BorderBrush        = $null
$BT_Username_Help_Probe.BorderBrush = $null
$BT_Deploy_Probe.BorderBrush        = $null
$BT_Password_Help_Probe.BorderBrush = $null
$BT_Client_Help_Agent.BorderBrush   = $null
$BT_Domain_Help_Probe.Background    = $null
$BT_Protocol_Help_Probe.Background  = $null
$BT_Help_Client_Probe.Background    = $null
$BT_Close.Background                = $null
$BT_Language.Background             = $null
$BT_Logs.Background                 = $null
$BT_Protocol_Help_Agent.Background  = $null
$BT_Deploy_Agent.Background         = $null
$BT_Username_Help_Probe.Background  = $null
$BT_Deploy_Probe.Background         = $null
$BT_Password_Help_Probe.Background  = $null
$BT_Client_Help_Agent.Background    = $null

#Connect to N-Central
New-NCentralConnection $Global:NCentral_FQDN $NAble_Credentials
# Get Customer Objects
$Obj_Customers = (Get-NCCustomerList)
$Customers_List = $Obj_Customers.customername

# Add Customers to combo boxes
foreach ($Customer in $Customers_List) {
    $CB_Client_Agent.Items.Add($Customer)| Out-Null
    $CB_Client_Probe.Items.Add($Customer)| Out-Null
}
#$Customers_List
#Install-NAbleWindowsAgent $REGISTRATION_TOKEN $CUSTOMERID

$BT_Domain_Help_Probe.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Domain_Help_Probe)
})
$BT_Protocol_Help_Probe.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Protocol_Help_Probe)
})
$BT_Help_Client_Probe.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Help_Client_Probe)
})
$BT_Close.Add_Click({
    $Form.Close()
})
$BT_Language.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Language)
})
$BT_Logs.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Logs)
})
$BT_Protocol_Help_Agent.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Protocol_Help_Agent)
})
$BT_Deploy_Agent.Add_Click({
    if ($ChkBox_Protocol_HTTPS_Agent.IsChecked -eq $true) {
        $UseProtocol = "HTTPS"
    }elseif ($ChkBox_Protocol_HTTP_Agent.IsChecked -eq $true) {
        $UseProtocol = "HTTP"
    }
    [System.Windows.MessageBox]::Show($UseProtocol)
})
$BT_Username_Help_Probe.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Username_Help_Probe)
})
$BT_Deploy_Probe.Add_Click({
    # Set the protocol flag
    if ($ChkBox_Protocol_HTTPS_Probe.IsChecked -eq $true) {
        $UseProtocol = "HTTPS"
    }elseif ($ChkBox_Protocol_HTTP_Probe.IsChecked -eq $true) {
        $UseProtocol = "HTTP"
    }

    # Create the PSCredential object from user input
    $Probe_Username          = $TB_Domain_Probe.Text + "\" +$TB_Probe_Username.Text
    $Probe_Pwd_SecureString  = $PB_Probe_Password.password | ConvertTo-SecureString -AsPlainText -Force
    $Probe_Credentials       = New-Object PSCredential ($Probe_Username, $Probe_Pwd_SecureString)

    #$Probe_Credentials.GetNetworkCredential().password
    #$Probe_Credentials.GetNetworkCredential().username
    #$Probe_Credentials.GetNetworkCredential().domain

    # Get the selected client name and find it's ID
    $Client = $CB_Client_Probe.SelectedItem
    $ID = ($Obj_Customers | where {$_.customername -eq $Client}).customerid

})
$BT_Password_Help_Probe.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Password_Help_Probe)
})
$BT_Client_Help_Agent.Add_Click({
    [System.Windows.MessageBox]::Show($MSG_Client_Help_Agent)
})
$Form.ShowDialog() | out-null